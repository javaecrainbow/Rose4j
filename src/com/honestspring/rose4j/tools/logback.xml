<?xml version="1.0" encoding="UTF-8"?>

<!-- ##部分是log4j.properties的配置，这里是为了体现对比性 -->
<configuration>

  <!-- 
    ## Console output...
    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.Target = System.out
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=%5p %d %C: %m%n
   -->
  <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
    <Target>System.out</Target>
    <encoder>
      <pattern>%5p %d : %m%n</pattern>
    </encoder>
  </appender>
  
  <!-- 
    ## Console DEBUG...
    log4j.appender.R=org.apache.log4j.RollingFileAppender
    log4j.appender.R.File=../logs/dspmsu_debug.log
    log4j.appender.R.Append = true
    log4j.appender.R.Threshold = DEBUG
    log4j.appender.R.Encoding=UTF-8
    log4j.appender.R.MaxFileSize=1024KB
    log4j.appender.R.MaxBackupIndex=10
    log4j.appender.R.layout=org.apache.log4j.PatternLayout
    log4j.appender.R.layout.ConversionPattern=%-d{yyyy-MM-dd   HH:mm:ss}   [%c]-[%p]   %m%n   
   -->
  <appender name="R" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
    <Append>true</Append>
    <File>C:/rose4j.log</File>
    <encoder>
      <pattern>%d{yyyy-MM-dd HH:mm:ss}, %p, %c, %t %m%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>debug</level>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <maxIndex>10</maxIndex>
      <FileNamePattern>dspmsu_debug.log.%i</FileNamePattern>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>1024KB</MaxFileSize>
    </triggeringPolicy>
  </appender>
  
  <!-- 
    ## Console ERROR
    log4j.appender.E=org.apache.log4j.RollingFileAppender
    log4j.appender.E.File=../logs/dspmsu_error.log
    log4j.appender.E.Append = true
    log4j.appender.E.Threshold = ERROR
    log4j.appender.E.Encoding=UTF-8
    log4j.appender.E.MaxFileSize=1024KB
    log4j.appender.E.MaxBackupIndex=10
    log4j.appender.E.layout=org.apache.log4j.PatternLayout
    log4j.appender.E.layout.ConversionPattern=%-d{yyyy-MM-dd   HH:mm:ss}   [%c]-[%p]   %m%n 
   -->
<appender name="Rose4j" class="ch.qos.logback.core.rolling.RollingFileAppender">
  <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
  <!-- 是否追加内容 -->
  <Append>true</Append>
  <!-- 指定file -->
  <File>C:/rose4j_error.log</File>
  <encoder>
    <pattern>%d{yyyy-MM-dd HH:mm:ss}, %p, %c, %t %m%n</pattern>
  </encoder>
  <!-- 只记录error级别 -->
  <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
    <level>ERROR</level>
  </filter>
  <!-- 当文件记录满1024k时，将记录到第二个log文件 -->
  <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
    <maxIndex>10</maxIndex>
    <FileNamePattern>rose4j_error.log.%i</FileNamePattern>
  </rollingPolicy>
  <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
    <MaxFileSize>1024KB</MaxFileSize>
  </triggeringPolicy>
</appender>
  
  <!-- 
    # Console mybatis
    log4j.logger.com.ibatis = stdout  
    log4j.logger.com.ibatis.common.jdbc.SimpleDataSource = stdout  
    log4j.logger.com.ibatis.common.jdbc.ScriptRunner = stdout  
    log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate = stdout  
    
    log4j.logger.java.sql.Connection = stdout
    log4j.logger.java.sql.Statement = stdout
    log4j.logger.java.sql.PreparedStatement = stdout
    log4j.logger.java.sql.ResultSet =stdout
   -->
  <logger name="com.ibatis" level="stdout"/>
  <logger name="java.sql.PreparedStatement" level="stdout"/>
  <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="stdout"/>
  <logger name="java.sql.Statement" level="stdout"/>
  <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="stdout"/>
  <logger name="java.sql.ResultSet" level="stdout"/>
  <logger name="com.ibatis.common.jdbc.ScriptRunner" level="stdout"/>
  <logger name="java.sql.Connection" level="stdout"/>
  
  <!-- 
  log4j.rootLogger=INFO, stdout, R, E
  TRACE << DEBUG << INFO << WARN << ERROR << ALL << OFF
   -->
  <root level="INFO">
    <appender-ref ref="stdout"/>
    <appender-ref ref="Rose4j"/>
  </root>
</configuration>